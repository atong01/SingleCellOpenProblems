name: Build Docker images

on:
  push:
    branches:
      - 'master'
      - 'test_docker'

jobs:
  build_images:
    runs-on: ${{ matrix.config.os }}
    if: "!contains(github.event.head_commit.message, 'ci skip')"

    strategy:
      fail-fast: false
      matrix:
        config:
        - {name: 'current', os: ubuntu-latest, python: '3.8' }

    steps:
    - name: Cancel Previous Runs
      uses: styfle/cancel-workflow-action@0.6.0
      with:
        access_token: ${{ github.token }}

    - uses: actions/checkout@v2

    - name: Cache result
      uses: actions/cache@v2
      id: cache-result
      with:
        path: ~/.docker_cache
        key: ${{ hashFiles('docker/**/*requirements.txt') }}-${{ hashFiles('docker/**/Dockerfile') }}

    - name: Set up Python
      if: |
        (steps.cache-result.outputs.cache-hit != 'true') ||
        startsWith(github.ref, 'refs/heads/test_docker')
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.config.python }}

    - name: Cache Python packages
      if: |
        (steps.cache-result.outputs.cache-hit != 'true') ||
        startsWith(github.ref, 'refs/heads/test_docker')
      uses: actions/cache@v2
      with:
        path: ${{ env.pythonLocation }}
        key: ${{runner.os}}-pip-${{ env.pythonLocation }}-${{ hashFiles('setup.py') }}
        restore-keys: ${{runner.os}}-pip-${{ env.pythonLocation }}-

    - name: Install package & dependencies
      if: |
        (steps.cache-result.outputs.cache-hit != 'true') ||
        startsWith(github.ref, 'refs/heads/test_docker')
      run: |
        python -m pip install --upgrade "pip<=21.0"
        pip install --use-deprecated=legacy-resolver -U wheel setuptools
        pip install --use-deprecated=legacy-resolver -U .
        pip install --use-deprecated=legacy-resolver -U snakemake
        python -c "import openproblems"

    - name: Build images
      if: |
        (steps.cache-result.outputs.cache-hit != 'true') ||
        startsWith(github.ref, 'refs/heads/test_docker')
      run: |
        cd scripts
        snakemake -j $(grep -c processor /proc/cpuinfo) docker_build
        cd ..

    - name: Push images
      if: |
        (steps.cache-result.outputs.cache-hit != 'true') &&
        startsWith(github.ref, 'refs/heads/master')
      env:
        DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
      run: |
        cd scripts
        snakemake -j $(grep -c processor /proc/cpuinfo) docker
        cd ..

    - name: Commit result
      if: |
        (steps.cache-result.outputs.cache-hit != 'true') &&
        startsWith(github.ref, 'refs/heads/master')
      uses: EndBug/add-and-commit@v6
      with:
        author_name: SingleCellOpenProblems
        author_email: singlecellopenproblems@protonmail.com
        message: 'Push Docker images # ci skip'
        add: 'docker/*/.docker_push'
        branch: auto_update
        push: false

    - name: Create Pull Request
      if: |
        (steps.cache-result.outputs.cache-hit != 'true') &&
        startsWith(github.ref, 'refs/heads/master')
      uses: peter-evans/create-pull-request@v3
      with:
        branch: auto_update
        delete-branch: false
        base: master
        title: '[auto] Update .docker_push'
        reviewers: scottgigante, dburkhardt, singlecellopenproblems

    - name: Upload check results on fail
      if: failure()
      uses: actions/upload-artifact@master
      with:
        name: ${{ matrix.config.name }}_results
        path: check
