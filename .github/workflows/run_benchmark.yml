name: Run Benchmark

on:
  push:
    tags:
      - '*'
    branches:
      - test_benchmark

jobs:
  run_benchmark:
    runs-on: ${{ matrix.config.os }}

    strategy:
      fail-fast: false
      matrix:
        config:
        - {name: 'current', os: ubuntu-latest, python: '3.8' }

    steps:
    - name: Cancel Previous Runs
      uses: styfle/cancel-workflow-action@0.6.0
      with:
        access_token: ${{ github.token }}

    - uses: actions/checkout@v2

    - name: Install system dependencies
      if: runner.os == 'Linux'
      run: |
        sudo apt-get update -qq
        sudo apt-get install -y libhdf5-dev pandoc gfortran libblas-dev liblapack-dev libedit-dev llvm-dev

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.config.python }}

    - name: Cache Python packages
      uses: actions/cache@v2
      with:
        path: ${{ env.pythonLocation }}
        key: ${{runner.os}}-pip-${{ env.pythonLocation }}-${{ hashFiles('setup.py') }}
        restore-keys: ${{runner.os}}-pip-${{ env.pythonLocation }}-

    - name: Install package & dependencies
      run: |
        python -m pip install --upgrade "pip<=21.0"
        pip install --use-deprecated=legacy-resolver -U wheel setuptools
        pip install --use-deprecated=legacy-resolver -U .[evaluate]
        python -c "import openproblems"

    - name: Run benchmark
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        AWS_DEFAULT_REGION: ${{ secrets.AWS_DEFAULT_REGION }}
      run: |
        git clean -fxdq
        aws s3 sync --quiet --delete --exclude .git . s3://openproblems-tibanna/
        snakemake \
          --tibanna \
          --tibanna-sfn=tibanna_unicorn_tibanna_unicorn \
          --default-remote-prefix=openproblems-tibanna/ \
          --container-image="singlecellopenproblems/openproblems-tibanna" \
          --precommand="for i in $(ls -1d docker/*/ | sed 's:docker/\(.*\)/:\1:'); do docker pull singlecellopenproblems/$i; done" \
          all

    - name: Commit result
      uses: EndBug/add-and-commit@v6
      with:
        author_name: SingleCellOpenProblems
        author_email: singlecellopenproblems@protonmail.com
        message: 'Push benchmarking results # ci skip'
        add: |
            website/data/results
            results.json
        branch: auto_update
        push: false

    - name: Create Pull Request
      uses: peter-evans/create-pull-request@v3
      with:
        branch: auto_update
        delete-branch: false
        base: master
        title: '[auto] Update results'
        reviewers: scottgigante, dburkhardt, singlecellopenproblems

    - name: Upload check results on fail
      if: failure()
      uses: actions/upload-artifact@master
      with:
        name: ${{ matrix.config.name }}_log
        path: scripts/.snakemake/log/
